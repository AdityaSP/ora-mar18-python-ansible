- hosts: localhost
  tasks:
    - name: Add hosts to group
      add_host:
        name: "{{ item }}"
        groups: dowebserver
      with_items:
        - "{{ groups.all }}"

- hosts: dowebserver
  gather_facts: no
  vars:
    do_token: '50d9590726646810a658335e03abb0bf238db8080684671708af1324f2b444d9'
  tasks:
    - name: wait for 
      local_action: "wait_for port=22 host={{ inventory_hostname }} timeout=30"
      register: output
      ignore_errors: true
    
    - name: ensure key exists
      digital_ocean: >
        state=present
        command=ssh
        name=my_ssh_key
        ssh_pub_key={{ lookup('file','~/.ssh/id_rsa.pub') }}
        api_token={{ do_token }}
      register: my_ssh_key
      delegate_to: localhost
      when: output.failed
    
    - name: Create a droplet
      digital_ocean: >
        state=present
        command=droplet
        name=ansible-web-backup
        unique_name=yes
        size_id=512mb
        region_id=sgp1
        image_id=ubuntu-16-04-x64
        ssh_key_ids={{ my_ssh_key.ssh_key.id }}
        api_token={{ do_token }}
      register: droplet_one
      delegate_to: localhost
      when: output.failed
      
    - name: Add host to our inventory
      add_host:
        name: "{{ droplet_one.droplet.ip_address }}"
        groups: do_backup_webserver
      when: droplet_one.droplet is defined and output.failed
      delegate_to: localhost
      
- hosts: do_backup_webserver
  remote_user: root
  gather_facts: no
  tasks:
    - name: Wait for port 22
      local_action: "wait_for port=22 host={{ inventory_hostname }}"

    - name: Wait for port 22
      raw: "apt-get install -y python"

    - name: install apache2
      apt: name=apache2 update_cache=yes cache_valid_time=36000
      
    - debug: var=inventory_hostname
    
    - name: deploy code
      copy: src=mypage.html dest=/var/www/html/mypage.html